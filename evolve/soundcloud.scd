This is an experiment with gene expression synthesis (http://geen.tehis.net) where all synthesizers are evolved from 2 initial chromosomes in real time. Each time the population is doubled for 5 generations ending up with 64 chromosomes in total by the end. The fitness of each individual is assessed by feature comparison to a sample of morin khuur (a Mongolian chordophone). These are the 2 initial SynthDefs:

SynthDef('gep_gen002_039_141027_103131', {|out=0,amp=0,dur=1,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v|  Out.ar(out,Pan2.ar(Normalizer.ar(LeakDC.ar((  LFCub.ar( Formant.ar( LFPar.ar(m, r, s, t ), h, j, f, u ),  Dust2.ar(q, t,  CML0.ar(i, g, e, h, n, b ) ), l,  LFSaw.ar( GbmanL.ar(s, r, n, f, l ), j, s, h ) ))*( LFNoise1.ar(o, g, v ))*( PMOsc.ar( Dust2.ar(n,  SinOsc.ar(e, p, v, g ),  Logist0.ar(j, l, c, n, c ) ),  Saw.ar( Formant.ar(h, n, b, q, s ),  LFPar.ar(s, q, k, p ), j ), f,  Saw.ar( LFNoise1.ar(i, u, n ), a, j ),  PMOsc.ar(r, t, m, a, l, b ),  Dust2.ar(m, l, i ) ))*( Blip.ar(u,  Blip.ar( Logist0.ar(h, b,  LFNoise2.ar(u, o, r ), h, o ), l,  PMOsc.ar(m, t, e, l, l, a ),  LFSaw.ar(v, n, n, i ) ), d, v ) ))),0,amp)) }).play(args: #[ a, 0.66267, b, 0.04388, c, 0.6438, d, 8133.68299, e, 0.13534, f, 6.67928, g, 0.01423, h, 8.1758, i, 151.1349, j, 0.13534, k, 25.21761, l, 155.56349, m, 0.91048, n, 0.06387, o, 2154.33424, p, 92.49861, q, 0.01741, r, 0, s, 1.25095, t, 0.13931, u, 0.22114, v, 0.49644 ])

SynthDef('gep_gen002_048_141002_140646', {|out=0,amp=0,dur=1,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v|  Out.ar(out,Pan2.ar(Normalizer.ar(LeakDC.ar((  LFClipNoise.ar( LFPulse.ar(r,  LFNoise0.ar(n, h, q ), q, k, c ),  SinOsc.ar(s, d, a,  GbmanL.ar(g, n, b, u, s ) ),  LFDNoise0.ar(t, r, k ) ))*( SinOsc.ar(q, a, q,  LFCub.ar( Logist0.ar( HenonL.ar(h, o, d, k, b, t, n ), s, e,  LFClipNoise.ar(d, h, h ), k ), k,  StandardL.ar(l, e, q, c, q, q ), m ) ))*( PMOsc.ar(l, j,  LFTri.ar( LFNoise2.ar(n, b, p ), b,  Dust2.ar(m, j, b ), c ), h, v,  HenonL.ar( Saw.ar(s, t, p ),  LFNoise0.ar(o, b, p ), m, e, p, b, e ) ))*( LFDNoise0.ar(p, o,  Saw.ar(v, a,  LFNoise1.ar( StandardL.ar(l,  Crackle.ar(i, o, t ), u, q, h, p ),  LFClipNoise.ar(p, r, s ), m ) ) ) ))),0,amp)) }).play(args: #[ a, 0.17052, b, 1.05192, c, 0.35104, d, 0.02132, e, 0.19701, f, 12911.41693, g, 0.04388, h, 103.82617, i, 11175.30341, j, 9129.75046, k, 0.85938, l, 0.27862, m, 0.27862, n, 0.17552, o, 43.65353, p, 0.26298, q, 10.00762, r, 739.98885, s, 0.44228, t, 25.95654, u, 0.81114, v, 0.38281 ])

